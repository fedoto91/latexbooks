\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{collection}
\RequirePackage{diagram}
\RequirePackage{stack}
\RequirePackage{expl3, xparse}% http://ctan.org/pkg/xparse
\RequirePackage{etoolbox}% http://ctan.org/pkg/etoolbox
\RequirePackage{ifthen}
\RequirePackage{adjustbox}
\RequirePackage{graphicx}
\RequirePackage{tikz}
\usetikzlibrary{graphs}
\usetikzlibrary{scopes,automata}
\usetikzlibrary{calc,shapes,shadows,shapes.multipart,chains,matrix,scopes,positioning,arrows.meta,arrows}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Tikz stylesheet
%%%%%%%%%%%%%%%%%%%%%%%%
\tikzset{
  -|-/.style={
    to path={
      (\tikztostart) -| ($(\tikztostart)!#1!(\tikztotarget)$) |- (\tikztotarget)
      \tikztonodes
    }
  },
  -|-/.default=0.5,
  |-|/.style={
    to path={
      (\tikztostart) |- ($(\tikztostart)!#1!(\tikztotarget)$) -| (\tikztotarget)
      \tikztonodes
    }
  },
  |-|/.default=0.5,
}
\tikzstyle{dline}=[*-, thick]
\tikzstyle{line}=[-, thick]
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
%% Helpers    %%%
%%%%%%%%%%%%%%%%%

\ExplSyntaxOn

\seq_new:N \g_parsed_seq %%global tmp parsed sequence


%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%List Processors %%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\NewDocumentCommand{\newlist}{ m }
 {
  \seq_new:c { #1_seq }
 }
 
\NewDocumentCommand{\addtolist}{ O{,} m m }
 {
 \seq_gclear:N \g_parsed_seq %%clear tmp
 \seq_gset_split:Nnn \g_parsed_seq {#1} {#3} %%split list by delimiter, store in tmp seq
 
 %%map function: add each element in tmp in given seq
 \seq_map_inline:Nn \g_parsed_seq
  {
   \seq_gput_right:cn { #2_seq } { ##1 }
  }
 
 }
 
\NewDocumentCommand{\getsize}{m}
{
  \seq_count:c {#1_seq} %%value of list length 
}

\NewDocumentCommand{\getindex}{ m m }
 {
  \seq_item:cn { #1_seq } { #2 }
 }
\NewDocumentCommand{\setindex}{ m m m }
 {
  \cs_set:Npx #3 { \seq_item:cn { #1_seq } { #2 } }
 }
\NewDocumentCommand{\clearlist}{ m }
 {
  \seq_gclear:c { #1_seq }
 }
\NewDocumentCommand{\printlist}{O{~} m}{
\seq_use:cn {#2_seq}{#1}
}
\NewDocumentCommand{\addby}{m m}{%
 \fp_eval:n {\seq_count:c {#1_seq} + (#2)}
}%

\NewDocumentCommand{\ceildivby}{m m}{
\fp_eval:n { ceil((#1) / (#2)) }
}
\ExplSyntaxOff


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%Global Setters
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%   
 \newlist{link}
 \newlist{test}
 \newcommand{\alignlist}{}
 \newcommand{\alignref}{below}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% left-right matrix                        %%
%%%                                          %%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\NewDocumentCommand{\lrmatrix}{ m m }{
\begin{tikzpicture}
  
  \clearlist{test}
  \addtolist{test}{#2}

\let\mymatrix\empty
\newcount\cnt
\cnt=0
\foreach \i in {1,...,\getsize{test}}{
    \begingroup\edef\x{\endgroup
      \noexpand\gappto\noexpand\mymatrix{\getindex{test}{\i} \&}}\x
      \global\advance\cnt by 1
      
    \ifboolexpr{ test {\ifnumcomp{\the\cnt}{=}{#1}} or test {\ifnumcomp{\i}{=}{\getsize{test}}} }
    { \gappto\mymatrix{\\} 
      \global\cnt=0
    }%else
    {}%
  }
   
  \matrix (a) [ampersand replacement=\&,matrix of nodes, row sep=0.5cm,column sep=0.5cm]{
    \mymatrix
  };
\end{tikzpicture}
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%vertical matrix by # of rows
%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\NewDocumentCommand{\vmatrix}{ m m }{
\begin{tikzpicture}
  
  \clearlist{test}
  \addtolist{test}{#2}

\let\mymatrix\empty

\newcount\from
\global\from=1
\newcount\to
\global\to=#1

\def\xval{\ceildivby{\getsize{test}}{#1}}

\foreach \i in {1,...,\xval}
{
  \foreach \j in {\the\to,...,\the\from}{

    \begingroup\edef\x{\endgroup
      \noexpand\gappto\noexpand\mymatrix{ \getindex{test}{\j} \&} }\x
  }
  \gappto\mymatrix{\\} 
      %%next set
      \global\advance\from by #1
      \global\advance\to by #1
}
%%
\node (aa)[rotate=90] {
\tikz
  \matrix (a) [ampersand replacement= \&,matrix of nodes, row sep=0.5cm,column sep=1cm, nodes={rotate=270}]{
    \mymatrix
  };
  };
\end{tikzpicture}
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%Left-right snake matrix by defined number of columns
%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\NewDocumentCommand{\lrsmatrix}{ m m }{
\begin{tikzpicture}
  
  \clearlist{test}
  \addtolist{test}{#2}

\let\mymatrix\empty

\newcount\tmp
\global\tmp=4
\newcount\from
\global\from=1
\newcount\to
\global\to=#1

\def\xval{\ceildivby{\getsize{test}}{#1}}

\foreach \i in {1,...,\xval}
{
  \foreach \j in {\the\from,...,\the\to}{
    \begingroup\edef\x{\endgroup
      \noexpand\gappto\noexpand\mymatrix{ \getindex{test}{\j} \&} }\x
  }
  \gappto\mymatrix{\\} 
      %%reverse
      \global\advance\from by #1
      \global\tmp\from
      \global\advance\to by #1
      \global\from\to
      \global\to\tmp
}

  \matrix (a) [ampersand replacement= \&,matrix of nodes, row sep=0.5cm,column sep=1cm]{
    \mymatrix
  };
\end{tikzpicture}
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%Right-left snake matrix by defined number of columns
%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\NewDocumentCommand{\rlsmatrix}{ m m }{
\begin{tikzpicture}
  
  \clearlist{test}
  \addtolist{test}{#2}

\let\mymatrix\empty

\newcount\tmp
\global\tmp=4
\newcount\from
\global\from=1
\newcount\to
\global\to=#1

\def\xval{\ceildivby{\getsize{test}}{#1}}

\foreach \i in {1,...,\xval}
{
  \foreach \j in {\the\to,...,\the\from}{

    \begingroup\edef\x{\endgroup
      \noexpand\gappto\noexpand\mymatrix{ \getindex{test}{\j} \&} }\x
  }
  \gappto\mymatrix{\\} 
      %%reverse
      \global\advance\from by #1
      \global\tmp\from
      \global\advance\to by #1
      \global\from\to
      \global\to\tmp
}
%%
  \matrix (a) [ampersand replacement= \&,matrix of nodes, row sep=0.5cm,column sep=1cm, nodes={}]{
    \mymatrix
  };
\end{tikzpicture}
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%Vertical snake matrix
%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\NewDocumentCommand{\vsmatrix}{ m m }{
\begin{tikzpicture}
  
  \clearlist{test}
  
  \addtolist{test}{#2}

\let\mymatrix\empty

\newcount\tmp
\global\tmp=4
\newcount\from
\global\from=1
\newcount\to
\global\to=#1

\def\xval{\ceildivby{\getsize{test}}{#1}}

\foreach \i in {1,...,\xval}
{
  \foreach \j in {\the\to,...,\the\from}{

    \begingroup\edef\x{\endgroup
      \noexpand\gappto\noexpand\mymatrix{ \getindex{test}{\j} \&} }\x
  }
  \gappto\mymatrix{\\} 
      %%reverse
      \global\advance\from by #1
      \global\tmp\from
      \global\advance\to by #1
      \global\from\to
      \global\to\tmp
}

 \node (aa) [rotate=90] {
  \tikz 
  \matrix (a) [ampersand replacement= \&,matrix of nodes, row sep=0.5cm,column sep=1cm, nodes={rotate=270}]{
    \mymatrix
  };
  };
\end{tikzpicture}
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%CS doubly linklist%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%param(1):set of values             
%%%%format:\csdlinklist{1,2,3,4}; 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\newcommand{\default}{ }
\newcommand{\styler}{\default}
\newsavebox{\boxer}

\NewDocumentCommand{\csdlinklist}{O{} m}{
\renewcommand\styler{#1}
\begin{tikzpicture}[#1,every node/.style={align=center,transform shape},linkn/.style={
            very thick, rectangle split, 
            rectangle split parts=3, draw, 
            rectangle split horizontal, minimum size=18pt,
            inner sep=5pt, text=black,rounded corners,
            rectangle split part fill={blue!20, red!20, blue!20}
            },
        ref/.style={very thick, rectangle split, 
            rectangle split parts=2, draw, 
             minimum size=18pt,
            text=black,rounded corners,
            rectangle split part fill={blue!20, red!20}}
            ,*->, auto, \styler
      ]

\ifstrempty{#2}{
\node[linkn] (0) {/ \nodepart{second}Head \\ Size = 0};
\path ($(0.three)+(0,0.08)$) edge[bend left] ($(0.one)+(0,0.08)$);
\path ($(0.one)+(0,-0.08)$) edge[bend left] ($(0.three)+(0,-0.08)$);
}%else
{
    
	\clearlist{link}           	
    \addtolist{link}{#2}
    
    \begin{scope}[start chain=going right, every join/.style={->, thick,shorten >=1pt},]
    \node[linkn, on chain] (0) {/ \nodepart{second}Head \\ Size = \getsize{link}}; 
	%%place and draw of link node and respective ref value
	\foreach \x in {1,...,\getsize{link}}{	 
    \node[linkn,on chain] (\x) {\nodepart{second} Idx(\x)};
    }
    \node[linkn, on chain] ({\addby{link}{1}}) {\nodepart{second}Tail \nodepart{three} /}; 
    \end{scope}
    
    \foreach \r in {1,...,\getsize{link}}{
    \savebox{\boxer}{\tikz\node{\getindex{link}{\r}};}
    \node[ref, below= of \r] (ref\r) {Ref(\r)-Value \nodepart{second}\usebox{\boxer}};
    \path ($(\r.center)+(0,-0.12)$) edge (ref\r);
    }
  
    \foreach \v [count=\i from 1] in {0,...,\getsize{link}}{

     \path ($(\v.three)+(0,0.08)$) edge[bend left] ($(\i.one)+(0,0.08)$);
    \path ($(\i.one)+(0,-0.08)$) edge[bend left] ($(\v.three)+(0,-0.08)$);
    }
}    
    \end{tikzpicture}  
    \renewcommand\styler{\default} 
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%CS loop doubly linklist%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%param(1):set of values             
%%%%format:\csdlinklist{1,2,3,4}; 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\NewDocumentCommand{\csloopdlinklist}{O{} m}{
\begin{tikzpicture}[every node/.style={align=center,transform shape},linkn/.style={
            very thick, rectangle split, 
            rectangle split parts=3, draw, 
            rectangle split horizontal, minimum size=18pt,
            inner sep=5pt, text=black,rounded corners,
            rectangle split part fill={blue!20, red!20, blue!20}
            },
        ref/.style={very thick, rectangle split, 
            rectangle split parts=2, draw, 
            , minimum size=18pt,
            inner sep=5pt, text=black,rounded corners,
            rectangle split part fill={blue!20, red!20}}
            ,remember picture, *->, auto
      ]

\ifstrempty{#2}{
\node[linkn] (0) {/ \nodepart{second}Head \\ Size = 0};
\path ($(0.three)+(0,0.08)$) edge[bend left] ($(0.one)+(0,0.08)$);
\path ($(0.one)+(0,-0.08)$) edge[bend left] ($(0.three)+(0,-0.08)$);
}%else
{
	
	\clearlist{link}         
    \addtolist{link}{#2}
    
    \begin{scope}[start chain=going right]
    \node[linkn, on chain,] (0) {/ \nodepart{second}Head \\ Size = \getsize{link}}; 
	%%place and draw of link node and respective ref value
	\foreach \x in {1,...,\getsize{link}}{	 
    \node[linkn,on chain] (\x) {\nodepart{second} Idx(\x)};
    } 
    \end{scope}
    
    \foreach \r in {1,...,\getsize{link}}{
    \node[ref, below= of \r] (ref\r) {Ref(\r)-Value \nodepart{second}\getindex{link}{\r}};
    \path ($(\r.center)+(0,-0.12)$) edge (ref\r);
    }
    \path (0.three) edge (1.one);
    
    \ifnumcomp{\getsize{link}}{=}{1}{
    \path ($(1.north west)+(0,0.08)$) edge[bend left] ($(1.north east)+(0,0.08)$);
    \path ($(1.north east)+(-0.2,0.08)$) edge[bend left] ($(1.north west)+(0.2,0.08)$);
    }%else
    {
       
    \foreach \v [count=\i from 2] in {1,...,\addby{link}{-1}}{
        \ifnumcomp{\i}{=}{\getsize{link}}{
        \path (\v.three) edge (\i.one);
        }%else
        {
     	\path ($(\v.three)+(0,0.08)$) edge[bend left] ($(\i.one)+(0,0.08)$);
   		\path ($(\i.one)+(0,-0.08)$) edge[bend left] ($(\v.three)+(0,-0.08)$);
    	}}%
    	
    	\draw[dline] (1.north west) -- ($(1.north west)+(0,1)$);
    	\draw[->,thick] ($(1.north west)+(0,1)$) -| ($({\getsize{link}}.north east)+(0,0.05)$);
    	
    	\draw[dline] ($({\getsize{link}}.north east)+(-0.3,0)$) -- ($({\getsize{link}}.north east)+(-0.3,0.5)$);
    	\draw[->,thick] ($({\getsize{link}}.north east)+(-0.3,0.5)$) -| ($(1.north west)+(0.3,0.05)$);
   
    }
}
    \end{tikzpicture}   
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%CS single linklist%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%param(1):set of values             
%%%%format:\cslinklist{1,2,3,4}; 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\NewDocumentCommand{\cslinklist}{O{} m}{
\renewcommand{\styler}{#1}
  	\begin{tikzpicture}[every node/.style={align=center,transform shape},linkn/.style={
            very thick, rectangle split, 
            rectangle split parts=3, draw, 
            rectangle split horizontal, minimum size=18pt,
            inner sep=5pt, text=black,rounded corners,
            rectangle split part fill={blue!20, red!20, blue!20}
            },
        ref/.style={very thick, rectangle split, 
            rectangle split parts=2, draw, 
            , minimum size=18pt,
            inner sep=5pt, text=black,rounded corners,
            rectangle split part fill={blue!20, red!20}}
            ,remember picture, *->,shorten >=1pt, auto,\styler
      ]
 
\ifstrempty{#2}{
\node[linkn] (0) {/ \nodepart{second}Head \\ Size = 0};
\path ($(0.three)+(0,0.08)$) edge[bend left] ($(0.one)+(0,0.08)$);
\path ($(0.one)+(0,-0.08)$) edge[bend left] ($(0.three)+(0,-0.08)$);
}%else
{     
	\clearlist{link}           

    \addtolist{link}{#2}
    
    \begin{scope}[start chain=going right]
    \node[linkn, on chain,] (0) {/ \nodepart{second}Head \\ Size = \getsize{link}}; 
	%%place and draw of link node and respective ref value
	\foreach \x in {1,...,\getsize{link}}{	 
    \node[linkn,on chain] (\x) {\nodepart{second} Idx(\x)};
    }
    \node[linkn, on chain,] ({\addby{link}{1}}) {\nodepart{second}Tail \nodepart{three} /}; 
    \end{scope}
    
    \foreach \r in {1,...,\getsize{link}}{
    \node[ref, below= of \r] (ref\r) {Ref(\r)-Value \nodepart{second}\getindex{link}{\r}};
    \path ($(\r.center)+(0,-0.12)$) edge (ref\r);
    } 

   \foreach \v [count=\w from 1] in {0,...,\getsize{link}}{
    \draw let \p1 = (\v.three), \p2 = (\v.center) in (\x1,\y2) -- (\w);
   }
}
    \end{tikzpicture}   
    \renewcommand{\styler}{\default}
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%CS loop single linklist%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%param(1):set of values             
%%%%format:\cslinklist{1,2,3,4}; 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\NewDocumentCommand{\cslooplinklist}{O{} m}{
  	\begin{tikzpicture}[every node/.style={align=center,transform shape},linkn/.style={
            very thick, rectangle split, 
            rectangle split parts=3, draw, 
            rectangle split horizontal, minimum size=18pt,
            inner sep=5pt, text=black,rounded corners,
            rectangle split part fill={blue!20, red!20, blue!20}
            },
        ref/.style={very thick, rectangle split, 
            rectangle split parts=2, draw, 
            , minimum size=18pt,
            inner sep=5pt, text=black,rounded corners,
            rectangle split part fill={blue!20, red!20}}
            ,remember picture, *->, auto
      ]
\ifstrempty{#2}{
\node[linkn] (0) {/ \nodepart{second}Head \\ Size = 0};
\path ($(0.three)+(0,0.08)$) edge[bend left] ($(0.one)+(0,0.08)$);
\path ($(0.one)+(0,-0.08)$) edge[bend left] ($(0.three)+(0,-0.08)$);
}%else
{          
	\clearlist{link}           
    \addtolist{link}{#2}
    
    \begin{scope}[start chain=going right]
    \node[linkn, on chain,] (0) {/ \nodepart{second}Head \\ Size = \getsize{link}}; 
	%%place and draw of link node and respective ref value
	\foreach \x in {1,...,\getsize{link}}{	 
    \node[linkn,on chain] (\x) {\nodepart{second} Idx(\x)};
    }
    \end{scope}
    
    \foreach \r in {1,...,\getsize{link}}{
    \node[ref, below= of \r] (ref\r) {Ref(\r)-Value \nodepart{second}\getindex{link}{\r}};
    \path ($(\r.center)+(0,-0.12)$) edge (ref\r);
    }
    \path (0.three) edge (1.one);
    
    \ifnumcomp{\getsize{link}}{=}{1}{
    \path ($(1.north west)+(0,0.08)$) edge[bend left] ($(1.north east)+(0,0.08)$);
    \path ($(1.north east)+(-0.2,0.08)$) edge[bend left] ($(1.north west)+(0.2,0.08)$);
    }%else
    {     
     \foreach \v [count=\w from 2] in {1,...,\addby{link}{-1}}{
     \draw (\v.three) -- (\w.one);
   	 }
	\draw[dline] ({\getsize{link}}.north east) -- ($({\getsize{link}}.north east)+(0,0.8)$);
    \draw[->,thick] ($({\getsize{link}}.north east)+(0,0.8)$) -| ($(1.north west)+(0,0.05)$);
	}
}
    \end{tikzpicture}   
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%CS vertical single linklist%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%param(1):set of values             
%%%%format:\cslinklist{1,2,3,4}; 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\NewDocumentCommand{\csvlinklist}{O{} m}{
  	\begin{tikzpicture}[every node/.style={align=center,transform shape},linkn/.style={
            very thick, rectangle split, 
            rectangle split parts=3, draw, 
            minimum size=18pt,
            inner sep=5pt, text=black,rounded corners,
            rectangle split part fill={blue!20, red!20, blue!20}
            },
        ref/.style={very thick, rectangle split, 
            rectangle split parts=2, draw, 
            , minimum size=18pt,
            inner sep=5pt, text=black,rounded corners,
            rectangle split part fill={blue!20, red!20}}
            ,remember picture, *->,shorten >=1pt, auto
      ]      
\ifstrempty{#2}{
\node[linkn] (0) {/ \nodepart{second}Head \\ Size = 0};
\path ($(0.three)+(0,0.08)$) edge[bend left] ($(0.one)+(0,0.08)$);
\path ($(0.one)+(0,-0.08)$) edge[bend left] ($(0.three)+(0,-0.08)$);
}%else
{     
	\clearlist{link}           
    \addtolist{link}{#2}
    
    \begin{scope}[start chain=going below]
    \node[linkn, on chain,] (0) {/ \nodepart{second}Head \\ Size = \getsize{link}}; 
	%%place and draw of link node and respective ref value
	\foreach \x in {1,...,\getsize{link}}{	 
    \node[linkn,on chain] (\x) {\nodepart{second} Idx(\x)};
    }
    \node[linkn, on chain,] ({\addby{link}{1}}) {\nodepart{second}Tail \nodepart{three} /}; 
    \end{scope}
    
    \foreach \r in {1,...,\getsize{link}}{
    \node[ref, right= of \r] (ref\r) {Ref(\r)-Value \nodepart{second}\getindex{link}{\r}};
    \path ($(\r.east)+(-0.3,0)$) edge (ref\r);
    }
   

   \foreach \v [count=\w from 1] in {0,...,\getsize{link}}{
    \draw (\v.three) -- (\w.one);
   }
}
    \end{tikzpicture}
   
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%CS vertical doubly linklist%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%param(1):set of values             
%%%%format:\csdlinklist{1,2,3,4}; 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\NewDocumentCommand{\csvdlinklist}{O{} m}{
\begin{tikzpicture}[every node/.style={align=center,transform shape},linkn/.style={
            very thick, rectangle split, 
            rectangle split parts=3, draw, 
            minimum size=18pt,
            inner sep=5pt, text=black,rounded corners,
            rectangle split part fill={blue!20, red!20, blue!20}
            },
        ref/.style={very thick, rectangle split, 
            rectangle split parts=2, draw, 
            , minimum size=18pt,
            inner sep=5pt, text=black,rounded corners,
            rectangle split part fill={blue!20, red!20}}
            ,remember picture, *->, auto
      ]

\ifstrempty{#2}{
\node[linkn] (0) {/ \nodepart{second}Head \\ Size = 0};
\path ($(0.three)+(0,0.08)$) edge[bend left] ($(0.one)+(0,0.08)$);
\path ($(0.one)+(0,-0.08)$) edge[bend left] ($(0.three)+(0,-0.08)$);
}%else
{
	\clearlist{link}           
    \addtolist{link}{#2}
    
    \begin{scope}[start chain=going below]
    \node[linkn, on chain,] (0) {/ \nodepart{second}Head \\ Size = \getsize{link}}; 
	%%place and draw of link node and respective ref value
	\foreach \x in {1,...,\getsize{link}}{	 
    \node[linkn,on chain] (\x) {\nodepart{second} Idx(\x)};
    }
    \node[linkn, on chain,] ({\addby{link}{1}}) {\nodepart{second}Tail \nodepart{three} /}; 
    \end{scope}
    
    \foreach \r in {1,...,\getsize{link}}{
    \node[ref, right= of \r] (ref\r) {Ref(\r)-Value \nodepart{second}\getindex{link}{\r}};
    \path ($(\r.east)+(-0.3,0)$) edge (ref\r);
    }

  
    \foreach \v [count=\i from 1] in {0,...,\getsize{link}}{

     \path ($(\v.three)+(0.1,0)$) edge[bend left] ($(\i.one)+(0.1,0)$);
    \path ($(\i.one)+(-0.1,0)$) edge[bend left] ($(\v.three)+(-0.1,0)$);
    }
}    
    \end{tikzpicture}   
} 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%single linklist%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%param(1):set of values             
%%%%format:\linklist{1,2,3,4}; 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\NewDocumentCommand{\linklist}{O{} m}{
  	\begin{tikzpicture}[every node/.style={align=center}, links/.style={}
            ,remember picture, *->,shorten >=1pt, auto,
      ]
    
\ifstrempty{#2}{ }
%else
{
    
	\clearlist{link}           
    \addtolist{link}{#2}
    \ifnumcomp{\getsize{link}}{=}{1}{ \node{\getindex{link}{1}};}
    %else
   {
	%%place and draw of link node
	\savebox{\boxer}{\tikz\node{\getindex{link}{1}};} 
	 \node(1){\usebox{\boxer}};
	\foreach \x [count=\px from 1] in {2,...,\getsize{link}}{
	\savebox{\boxer}{\tikz\node{\getindex{link}{\x}};} 	 
    \node[links, right=of \px] (\x) {\usebox{\boxer}};
    }
    
     \foreach \v [count=\w from 2] in {1,...,\addby{link}{-1}}{
     \draw (\v.east) -- (\w.west);
     }
   }
}
    \end{tikzpicture}
   
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%double linklist%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%param(1):set of values             
%%%%format:\linklist{1,2,3,4}; 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\NewDocumentCommand{\dlinklist}{O{} m}{
  	\begin{tikzpicture}[every node/.style={align=center}, links/.style={}
            ,remember picture, *->,shorten >=1pt, auto, 
      ]
    
    \ifstrempty{#2}{ }
    %else
    {
    
	\clearlist{link}           
    \addtolist{link}{#2}
    \ifnumcomp{\getsize{link}}{=}{1}{ \node{\getindex{link}{1}};}%
   {
	%%place and draw of link node and respective ref value
	\node(1){\getindex{link}{1}};
	\foreach \x [count=\px from 1] in {2,...,\getsize{link}}{	 
    \node[links, right=of \px] (\x) {\getindex{link}{\x}};
    }
    
   \foreach \v [count=\w from 2] in {1,...,\addby{link}{-1}}{

     \path ($(\v.east)+(0,0.06)$) edge[bend left] ($(\w.west)+(0,0.06)$);
    \path ($(\w.west)+(0,-0.06)$) edge[bend left] ($(\v.east)+(0,-0.06)$);
    }
   }
   }
    \end{tikzpicture}   
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%single linklist%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%param(1):set of values             
%%%%format:\linklist{1,2,3,4}; 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\NewDocumentCommand{\vlinklist}{O{} m}{
  	\begin{tikzpicture}[every node/.style={align=center}, links/.style={},
  						 *->,shorten >=1pt, auto
      ]
    
    \ifstrempty{#2}{ }
    %else
    {
    
	\clearlist{link}           
    \addtolist{link}{#2}
    \ifnumcomp{\getsize{link}}{=}{1}{\node{\getindex{link}{1}};}%
   {
	%%place and draw of link node and respective ref value
	 \node(1){\getindex{link}{1}};
	\foreach \x [count=\px from 1] in {2,...,\getsize{link}}{	 
    \node[links, below=of \px] (\x) {\getindex{link}{\x}};
    }
    
   \foreach \v [count=\w from 2] in {1,...,\addby{link}{-1}}{
    \draw (\v.south) -- (\w.north);
   }
   }
   }
    \end{tikzpicture}  
}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%vertical double linklist%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%param(1):set of values             
%%%%format:\linklist{1,2,3,4}; 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\NewDocumentCommand{\vdlinklist}{O{} m}{
  	\begin{tikzpicture}[every node/.style={align=center}, links/.style={}
            , *->,shorten >=1pt, auto
      ]
    
    \ifstrempty{#2}{ }
    %else
    {
    
	\clearlist{link}           
    \addtolist{link}{#2}
    \ifnumcomp{\getsize{link}}{=}{1}{ \node{\getindex{link}{1}};}%
   {
	%%place and draw of link node and respective ref value
	 \node(1){\getindex{link}{1}};
	\foreach \x [count=\px from 1] in {2,...,\getsize{link}}{	 
    \node[links, below=of \px] (\x) {\getindex{link}{\x}};
    }
    
   \foreach \v [count=\w from 2] in {1,...,\addby{link}{-1}}{

     \path ($(\v.south)+(0.06,0)$) edge[bend left] ($(\w.north)+(0.06,0)$);
    \path ($(\w.north)+(-0.06,0)$) edge[bend left] ($(\v.south)+(-0.06,0)$);
    }
   }
   }
    \end{tikzpicture}   
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%doubly loop linklist%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%param(1):set of values             
%%%%format:\linklist{1,2,3,4}; 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\NewDocumentCommand{\loopdlinklist}{O{} m}{
  	\begin{tikzpicture}[every node/.style={align=center}, links/.style={}
            ,remember picture, *->,shorten >=1pt, auto
      ]
    
    \ifstrempty{#2}{ }
    %else
    {
    
	\clearlist{link}           
    \addtolist{link}{#2}
    \ifnumcomp{\getsize{link}}{=}{1}{ \node{\getindex{link}{1}};}%
   {
	%%place and draw of link node and respective ref value
	 \node(1){\getindex{link}{1}};
	\foreach \x [count=\px from 1] in {2,...,\getsize{link}}{	 
    \node[links, right=of \px] (\x) {\getindex{link}{\x}};
    }
    
  \foreach \v [count=\w from 2] in {1,...,\addby{link}{-1}}{

     \path ($(\v.east)+(0,0.06)$) edge[bend left] ($(\w.west)+(0,0.06)$);
    \path ($(\w.west)+(0,-0.06)$) edge[bend left] ($(\v.east)+(0,-0.06)$);
    }
   \path ({\getsize{link}}.north) edge[bend right=40] (1.north);
   \path (1.south) edge[bend right=40] ({\getsize{link}}.south);
   }
   }
    \end{tikzpicture}   
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%single loop linklist%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%param(1):set of values             
%%%%format:\linklist{1,2,3,4}; 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\NewDocumentCommand{\looplinklist}{O{} m}{
  	\begin{tikzpicture}[every node/.style={align=center}, links/.style={}
            ,remember picture, *->,shorten >=1pt, auto
      ]
    
    \ifstrempty{#2}{ }
    %else
    {
    
	\clearlist{link}           
    \addtolist{link}{#2}
    \ifnumcomp{\getsize{link}}{=}{1}{\node{\getindex{link}{1}};}%
   {
	%%place and draw of link node and respective ref value
	 \node(1){\getindex{link}{1}};
	\foreach \x [count=\px from 1] in {2,...,\getsize{link}}{	 
    \node[links, right=of \px] (\x) {\getindex{link}{\x}};
    }
    
   \foreach \v [count=\w from 2] in {1,...,\addby{link}{-1}}{
    \draw (\v.east) -- (\w.west);
   }
   \path ({\getsize{link}}.north) edge[bend right=40] (1.north);
   }
   }
    \end{tikzpicture}  
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%Base Hashmap%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%param(2): name, set of key value pairs;             %%
%%%format: \hashmapset{name}{{key,val},{key,val},...};%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%Hashmap%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%param(2): name, set of key value pairs;             %%
%%%format: \hashmapset{name}{{key,val},{key,val},...};%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\newlist{keys}
\newlist{vals}

\newcommand\hashmapset[3]{
\begin{tikzpicture}[auto,->,thick,remember picture,
  inner/.style={circle,draw=blue!50,fill=blue!20,inner sep=3pt},
  outer/.style={rectangle,rectangle split, rectangle split parts=3, rectangle split part align={center,center,center},draw=black, rounded corners,fill=red!40, text centered, text=black}
  ]
%reset lists upon instantiation%%
	\clearlist{keys}           %%
	\clearlist{vals}           %%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	\addtolist{keys}{#2}
	\addtolist{vals}{#3}
  %%construct Hashmap
  
    \node[outer] (#1){#1 \nodepart{two}\tikz\node[inner,label={[xshift=-1.0cm,yshift=-1.3cm]Size}]{\getsize{keys}};%
\nodepart{three}%
\tikz \node(scope){%
    \begin{tikzpicture}[start chain=1 going below]%
    % Place key value nodes vertical
    \foreach \i in {1,...,\getsize{keys}}{ 
      \node [inner, on chain=1] (bk\i)  {};
      \node [inner, right=of bk\i] (bv\i) {};
    }%  
    \end{tikzpicture}%
    };%
    };%%
    
    
    \ifnumcomp{\getsize{keys}}{=}{1}{
    \node[left=1cm bk1](key1){\getindex{keys}{1}};
    \node[right=1cm of bv1](val1){\getindex{vals}{1}};
    }%else
    {
     %% Place key value pairs references
    
    
     %%get keys   
     \node[left= of bk1] (key1){\getindex{keys}{1}};
      \foreach \k [count=\xk from 1] in {2,...,\getsize{keys}}{                                 
     \node [below= of key\xk .east, anchor=east, left= of bk\k] (key\k)  { \getindex{keys}{\k} };
     }
    
     
    
                                       
     %%get values  
      \node[right= of bv1] (val1){\getindex{vals}{1}};
      \foreach \v [count=\xv from 1] in {2,...,\getsize{keys}}{                                 
     \node [below= of val\xv .west, anchor=west, right= of bv\v] (val\v)  { \getindex{vals}{\v} };
     }
   
   
    }     
      
 %%connect nodes to references
 
 \foreach \j  in {1,...,\getsize{keys}}{
 	 \path (bk\j .center) edge (key\j);
     \path (bv\j .center) edge (val\j);
 }
 
 \end{tikzpicture} %% end
} 




\endinput
